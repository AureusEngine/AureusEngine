{
  "canvas_name": "Reverse Engineering Canonical Crafting Rules",
  "version": "1.0",
  "status": "locked",
  "rules": [
    {
      "id": 1,
      "description": "Crafting distributions must be bounded by the minimum and maximum quality tiers of the input recipe."
    },
    {
      "id": 2,
      "description": "Distribution bins are aligned to [tier, tier + 1), with all output falling within these bounds."
    },
    {
      "id": 3,
      "description": "Deviation signatures must be normalized to start from 0 (e.g., (0, x) for 2mat, (0, x, y) for 3mat)."
    },
    {
      "id": 4,
      "description": "No non-zero probability can exist outside the min-max quality tier range of the input recipe."
    },
    {
      "id": 5,
      "description": "Zero values in distribution curves are only allowed outside the valid tier range. Intermediate values must be non-zero."
    },
    {
      "id": 6,
      "description": "Repeated quality tiers in input must be weighted accordingly but not redundantly influence shaping."
    },
    {
      "id": 7,
      "description": "BASE material inputs are fully interchangeable in order and do not affect deviation signature."
    },
    {
      "id": 8,
      "description": "ADV material positions are purely cosmetic and must not influence prediction or deviation calculation."
    },
    {
      "id": 9,
      "description": "Shaping kernel curves must show strong pull toward the minimum tier and weaker skew toward the maximum."
    },
    {
      "id": 10,
      "description": "Curve shaping must include the max tier, not exceed it. [x < max + 1] logic must be enforced."
    },
    {
      "id": 11,
      "description": "Templates always occupy the final position and exert disproportionate influence modeled via weighting (e.g., [1, 1, T])."
    },
    {
      "id": 12,
      "description": "Adjustment layers must not expand the output range beyond min and max tiers."
    },
    {
      "id": 13,
      "description": "Deviation signature tables must not rely on manual profile lookup where functional kernel logic can derive results."
    }
  ]
}